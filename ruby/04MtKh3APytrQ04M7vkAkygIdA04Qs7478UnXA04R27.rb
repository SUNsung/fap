
        
          def approve!
    users = accounts.includes(:user).map(&:user)
    
      def payload
    @payload ||= Oj.dump(serialize_payload(@status, ActivityPub::ActivitySerializer, signer: @status.account))
  end
end

    
          it 'creates a reblog by sender of status' do
        expect(sender.reblogged?(status)).to be true
      end
    end
    
        old_account.update!(uri: 'https://example.org/alice', domain: 'example.org', protocol: :activitypub, inbox_url: 'https://example.org/inbox')
    new_account.update!(uri: 'https://example.com/alice', domain: 'example.com', protocol: :activitypub, inbox_url: 'https://example.com/inbox', also_known_as: [old_account.uri])
    
    module Pod
  class PlainInformative
    include CLAide::InformativeError
  end
    
              # Creates the group that holds the references to the support files
          # generated by this installer.
          #
          # @return [void]
          #
          def create_support_files_group
            parent = project.support_files_group
            name = target.name
            dir = target.support_files_dir
            @support_files_group = parent.new_group(name, dir)
          end
    
          # @return [String, Nil] the dSYM path, if one exists
      #
      attr_reader :dsym_path